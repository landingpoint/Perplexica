services:
  searxng:
    image: docker.io/searxng/searxng:latest
    volumes:
      - ./searxng:/etc/searxng:rw
    ports:
      - "4000:8080"
    networks:
      - perplexica-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - INSTANCE_NAME=Landi Search
      - BASE_URL=https://search.asklandi.ai/
      - SEARXNG_BASE_URL=https://search.asklandi.ai/

  perplexica-backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    image: itzcrazykns1337/perplexica-backend:main
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - NODE_ENV=production
      - AUTH_ENABLED=true
      - AUTH_PROVIDER=azure
      - AUTH_REDIRECT_URI=https://app.asklandi.ai/api/auth/callback
    depends_on:
      searxng:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - backend-dbstore:/home/perplexica/data
      - ./config.toml:/home/perplexica/config.toml:ro
    networks:
      - perplexica-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  perplexica-frontend:
    build:
      context: .
      dockerfile: app.dockerfile
      args:
        # Update URLs to use HTTPS and proper domain
        - NEXT_PUBLIC_API_URL=https://api.asklandi.ai/api
        - NEXT_PUBLIC_WS_URL=wss://api.asklandi.ai
        # Add Azure AD configuration
        - NEXT_PUBLIC_AUTH_PROVIDER=azure
        - NEXT_PUBLIC_AUTH_ENABLED=true
        - NEXT_PUBLIC_AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
        - NEXT_PUBLIC_AUTH_REDIRECT_URI=https://app.asklandi.ai/api/auth/callback
    image: itzcrazykns1337/perplexica-frontend:main
    depends_on:
      perplexica-backend:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    networks:
      - perplexica-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  perplexica-network:
    driver: bridge
    # Optional: Add internal network configuration
    # internal: true

volumes:
  backend-dbstore:
    driver: local